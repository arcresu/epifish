% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epiweek_calculations.R
\name{get_epiweek_span}
\alias{get_epiweek_span}
\title{Produce a human-readable start and end date for the epi week}
\usage{
get_epiweek_span(
  cdate,
  return_end = FALSE,
  add_year = FALSE,
  first_month = TRUE,
  date_format = "ymd",
  week_start = 7,
  newline = FALSE
)
}
\arguments{
\item{cdate}{character string in specified date format (eg 2020/01/25, 2020.1.25, 20-01-05 or the like)}

\item{return_end}{TRUE/FALSE whether to just return the end day}

\item{add_year}{TRUE/FALSE whether to include the year}

\item{first_month}{TRUE/FALSE whether to include the first month in the text}

\item{date_format}{character date format: "ymd" "dmy" or "mdy" (default is "ymd")}

\item{week_start}{integer day that weeks start on (1=Monday, 6=Saturday, 7=Sunday)}

\item{newline}{TRUE/FALSE whether to use newlines instead of spaces}
}
\value{
character string
}
\description{
Given a case date, returns a text description of the epi week it belongs in
(eg "29 Mar - 4 Apr"). If `return_end` is `TRUE` just returns the end date
(eg "4 Apr"). If `add_year` is `TRUE` appends the year (eg "4 Apr 2020"). If
`first_month` is FALSE will skip the first month entry (eg "29-4 Apr"). If
`newline` is TRUE will use a newline instead of a space (eg `29-4\\nApr``).
}
\details{
This function takes a case date, and returns a human-friendly description of that week
(useful for labelling plots). By default this function uses the CDC's description of an epi week
which starts on Sunday and ends on Monday; If your weeks start on a different day, use the `week_start` variable.
}
\examples{
get_epiweek_span( "2020/01/25")
get_epiweek_span( "25.1.20", return_end=TRUE, add_year=TRUE, date_format="dmy")
get_epiweek_span( "1-25-2020", first_month=FALSE, add_year=TRUE, date_format="mdy")

}
